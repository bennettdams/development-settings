{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"console.log": {
		"prefix": "cl",
		"body": "console.log(${1:'here'})$0"
	},
	"console.log('var', var)": {
		"prefix": "vl",
		"body": "console.log('$1', $1)$0"
	},
	"console.log({var})": {
		"prefix": "ol",
		"body": "console.log({$1})$0"
	},
	"import x from '": {
		"prefix": "imp",
		"body": "import ${2:*} from '$1'$3"
	},
	"Switch": {
		"prefix": "switch",
		"description": "Switch statement snippet",
		"body": [
			"switch (${1:key}) {",
			"  case ${2:value}: {",
			"    $0",
			"    break",
			"  }",
			"  default: {",
			"    break",
			"  }",
			"}"
		]
	},
	"React useState": {
		"prefix": "us",
		"description": "React useState",
		"body": [
			"const [${1:state}, ${2:setState}] = useState$4($3)$0"
		]
	},
	"React useEffect": {
		"prefix": "uf",
		"description": "React useEffect",
		"body": [
			"useEffect(() => {",
			"  $0",
			"}, [$1])"
		]
	},
	"React component": {
		"scope": "typescript,typescriptreact",
		"prefix": "reactcomp",
		"body": [
			"import * as React from \"react\"",
			"",
			"interface ${1:compName}Props {",
			"",
			"}",
			"",
			"export const ${1:compName}: React.FC<${1:compName}Props> = props => {",
			"    return $0",
			"}",
			""
		],
		"description": "React component (TSX)"
	},
	"React component without props": {
		"scope": "typescript,typescriptreact",
		"prefix": "reactcompnoprops",
		"body": [
			"import * as React from \"react\"",
			"",
			"export const ${1:compName}: React.FC = () => {",
			"    return $0",
			"}",
			""
		],
		"description": "React component without props (TSX)"
	},
	"Jest test": {
		"prefix": "test",
		"description": "Jest test block",
		"body": [
			"test('$1', () => {",
			"  $0",
			"})"
		]
	},
	"Jest async test": {
		"prefix": "atest",
		"description": "Jest async test block",
		"body": [
			"test('$1', async () => {",
			"  $0",
			"})"
		]
	}
}
