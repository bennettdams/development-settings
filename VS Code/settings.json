{
  // GENERAL
  "files.eol": "\n", // LF
  "files.refactoring.autoSave": false,
  "telemetry.telemetryLevel": "off",
  "breadcrumbs.enabled": true,
  "explorer.autoReveal": false,
  "problems.defaultViewMode": "table",
  // FONT
  "editor.fontFamily": "'Dank Mono', 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.stickyScroll.enabled": true,
  // "editor.fontWeight": "300",
  "editor.fontSize": 14,
  "terminal.integrated.fontFamily": "'Dank Mono'",
  "terminal.integrated.fontSize": 14,
  // EDITOR
  "editor.guides.indentation": false,
  "editor.minimap.enabled": false,
  "editor.tabCompletion": "on",
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "editor.lineDecorationsWidth": 25,
  "editor.bracketPairColorization.enabled": false,
  "editor.padding.top": 40,
  "editor.lineNumbers": "off",
  "editor.suggest.preview": true,
  "workbench.editor.labelFormat": "short",
  // INLAY HINTS
  "javascript.inlayHints.parameterNames.enabled": "all",
  "typescript.inlayHints.parameterNames.enabled": "all",
  "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": true,
  "javascript.inlayHints.variableTypes.enabled": true,
  "typescript.inlayHints.variableTypes.enabled": true,
  "javascript.inlayHints.propertyDeclarationTypes.enabled": true,
  "typescript.inlayHints.propertyDeclarationTypes.enabled": true,
  "javascript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.inlayHints.functionLikeReturnTypes.enabled": true,
  "typescript.suggest.completeFunctionCalls": true,
  // WORKBENCH
  "workbench.settings.editor": "json",
  "workbench.startupEditor": "newUntitledFile",
  "workbench.editor.restoreViewState": false,
  "workbench.tree.renderIndentGuides": "onHover",
  "workbench.editor.enablePreviewFromQuickOpen": false,
  // WINDOW
  "window.titleBarStyle": "custom",
  "window.menuBarVisibility": "toggle",
  // SEARCH
  "search.showLineNumbers": true,
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/coverage": true,
    "**/dist": true,
    "**/build": true,
    "**/.build": true,
    "**/.gh-pages": true
  },
  // THEME
  "editor.semanticHighlighting.enabled": true,
  "workbench.iconTheme": "vscode-icons",
  "workbench.colorCustomizations": {
    "[Default Dark+]": {
      "editor.background": "#282C34",
      "sideBar.background": "#282C34",
      "titleBar.activeBackground": "#282C34",
      "titleBar.inactiveBackground": "#282C34",
      "tab.inactiveBackground": "#282C34",
      "activityBar.activeBackground": "#282C34",
      "activityBar.background": "#282C34",
      "sideBarSectionHeader.background": "#282C34",
      "list.activeSelectionForeground": "#ffd6b04d",
      "list.activeSelectionBackground": "#ffd6b04d",
      "list.focusBackground": "#ffd6b04d",
      "list.focusForeground": "#ffd6b04d",
      "list.focusOutline": "#ffd6b04d",
      "statusBar.background": "#282C34",
      "statusBar.noFolderBackground": "#282C34",
      "statusBar.debuggingBackground": "#282C34",
      "statusBarItem.remoteBackground": "#282C34"
    }
  },
  "editor.tokenColorCustomizations": {
    "[Default Dark+]": {
      "functions": "#e2d5bf",
      "types": "#86d4be",
      "strings": "#b89b90",
      "keywords": "#ceb2cb",
      "comments": "#9ebb92",
      "variables": "#a2cee6",
      "textMateRules": [
        {
          "scope": "variable.other.constant",
          "settings": {
            "foreground": "#59b3e4"
          }
        },
        {
          "scope": "variable.other.enummember",
          "settings": {
            "foreground": "#59b3e4"
          }
        }
      ]
    },
    "textMateRules": [
      {
        "scope": [
          //following will be in italics
          "comment",
          "entity.name.type.class", // class names
          "keyword", // import, export, return…
          "support.class.builtin.js", // String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
          "storage.type.function.js", // function keyword
          "storage.type.js", // variable declarations
          "keyword.control.import.js", // imports
          "keyword.control.from.js", // from-Keyword
          "entity.name.type.js", // new … Expression
          "keyword.control.flow.js", // await
          "keyword.control.conditional.js", // if
          "keyword.control.loop.js", // for
          "keyword.operator.new.js", // new
          "constant",
          // from Night Owl
          "markup.changed",
          "meta.diff.header.git",
          "meta.diff.header.from-file",
          "meta.diff.header.to-file",
          "markup.deleted.diff",
          "markup.inserted.diff",
          "markup.changed",
          "comment",
          "punctuation.accessor",
          "keyword",
          "storage",
          // "meta.var.expr",    variables?
          "meta.class meta.method.declaration meta.var.expr storage.type.js",
          "storage.type.property.js",
          "storage.type.property.ts",
          "storage.type.property.tsx",
          "entity.name.function",
          "entity.other.attribute-name",
          "keyword.operator.relational",
          "meta.delimiter.period",
          "meta.selector",
          "entity.name.tag.doctype",
          "meta.tag.sgml.doctype",
          "variable.other.object.property",
          "keyword.operator.comparison",
          "keyword.control.flow.js",
          "keyword.control.flow.ts",
          "keyword.control.flow.tsx",
          "keyword.control.ruby",
          "keyword.control.module.ruby",
          "keyword.control.class.ruby",
          "keyword.control.def.ruby",
          "keyword.control.loop.js",
          "keyword.control.loop.ts",
          "keyword.control.import.js",
          "keyword.control.import.ts",
          "keyword.control.import.tsx",
          "keyword.control.from.js",
          "keyword.control.from.ts",
          "keyword.control.from.tsx",
          "keyword.operator.instanceof.js",
          "keyword.operator.expression.instanceof.ts",
          "keyword.operator.expression.instanceof.tsx",
          "italic",
          "quoate",
          "source.elixir .punctuation.binary.elixir",
          "meta.tag.sgml.doctype.html",
          "variable.other.object.js",
          "markup.italic.markdown",
          "markup.quote.markdown",
          "keyword.control"
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          // following will be excluded from italics
          // "invalid",
          // "keyword.operator",
          // "constant.numeric.css",
          // "keyword.other.unit.px.css",
          // "constant.numeric.decimal.js",
          // "constant.numeric.json",
          // "entity.name.type.class.js"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  // GIT & DIFF
  "git.confirmSync": false,
  "git.autofetch": true,
  "git.alwaysShowStagedChangesResourceGroup": true,
  "git.mergeEditor": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "diffEditor.renderSideBySide": true,
  // LINTING & FORMATTING
  "eslint.alwaysShowStatus": true,
  "editor.codeActionsOnSave": {
    "source.fixAll.eslint": true,
    "source.organizeImports": true
  },
  "editor.formatOnSave": true,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "prettier.configPath": ".prettierrc",
  // TAILWIND
  "tailwindCSS.emmetCompletions": true,
  "tailwindCSS.colorDecorators": true,
  "tailwindCSS.showPixelEquivalents": true,
  // MISC
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "vsicons.dontShowNewVersionMessage": true,
}
